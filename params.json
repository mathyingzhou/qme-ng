{"name":"Qme-ng","body":"# qme-ng: Quiver Mutation Explorer\r\n\r\nWelcome to qme-ng !\r\n\r\nQME is a fast quiver manipulation program intended to:\r\n* find the cardinality of the mutation class of a given quiver\r\n* find the maximum length of a green suite starting from a given quiver\r\n\r\nIn order to do so, it uses various optimizations that are specific to the\r\nproblem at hand, and which result from a careful study by Grégoire Dupont and\r\nMatthieu Pérotin.\r\n\r\nQuickJump: <a href=\"#quickstart\">Quickstart</a>, <a href=\"#overview\">Overview</a>, <a href=\"#installation\">Installation</a>, <a href=\"#documentation\">Documentation</a>, <a href=\"#dependencies\">Dependencies</a>, <a href=\"#licence\">License</a>, <a href=\"#contact\">Contact</a>.\r\n \r\n## <a name=\"quickstart\"/>Quickstart\r\n* Find the mutation class of D<sub>7</sub><br/>\r\n `qme-ng --type D --size 7`\r\n* Find the length of all the maximum green sequences of the quiver in quiver.qmu<br/>\r\n `qme-ng --file quiver.qmu --green`\r\n* Try to find one green sequence of length at least 30 for the quiver in quiver.qmu<br/>\r\n `qme-ng --file quiver.qmu --green --one 50 --min_depth 30 --max_depth 50`\r\n\r\n## <a name=\"overview\"/>Overview \r\nQuiver mutations were introduced by Fomin and Zelevinsky in the context of cluster algebras. Initially, the mutation was defined for skew-symmetric (actually skew-symmetrizable) matrices over the integers. Using incidence matrices, there is a 1-1 correspondence between skew-symmetric matrices and oriented graphs without 1-cycles or 2-cycles. These graphs are referred to as quivers in our context.\r\n\r\nI will not explain precisely what the quiver (or matrix) mutation is. I think the first way to understand it is to try it on examples using [Bernhard Keller’s java applet](http://www.math.jussieu.fr/~keller/quivermutation/). Then, if you want to know the precise definition, you can consult [the historical article by Fomin and Zelevinsky on the subject](http://arxiv.org/abs/math/0104151).\r\n\r\nRoughly speaking, given a quiver _Q_, for any vertex _i_ of _Q_, we can define a new quiver _Q’_, called mutation of _Q_ at _i_, by changing locally around _i_ the quiver _Q_. Iterating this process, we create a list of quivers which can be finite or infinite. The quiver we started with is called _mutation-finite_ if you only create a finite number of new quivers this way, it is called _mutation-infinite_ otherwise.\r\n\r\nThe aim of QME is to decide, for a given quiver _Q_, if _Q_ is mutation-finite or not. Also, when _Q_ is mutation-finite, QME gives the number of non-isomorphic quivers created during the process.\r\n\r\nMaximal green sequences are particular sequences of quiver mutations which were introduced by Keller in his article [On cluster theory and quantum dilogarithm identities](http://arxiv.org/abs/1102.4148) and which appear independently in various areas of mathematics and theoretical physics.\r\n\r\nFor a purely combinatorial description, we refer to the to the first section of our preprint [On Maximal Green Sequences](http://arxiv.org/abs/1205.2050) (joint with T. Brüstle).\r\n\r\nRegarding the maximal green sequences problem, the aim of QME is to answer the two following questions, given a quiver _Q_:\r\n\r\n1. Does there exist a maximal green sequence for _Q_ ?\r\n2. If yes, how many maximal green sequences of each length are there in the set of maximal green sequences for _Q_ ?\r\n\r\n## <a name=\"installation\"/>Download & Installation\r\n### Ubuntu packages\r\nPackages are available for the Ubuntu distribution. You will not get the best performances from this install mode, yet you may consider it to be more convenient.\r\n\r\n* [qme-ng_1.1.1-0ubuntu1_i386.deb](https://github.com/downloads/mp-bull/qme-ng/qme-ng_1.1.1-0ubuntu1_i386.deb)\r\n* [qme-ng_1.1.1-0ubuntu1_amd64.deb](https://github.com/downloads/mp-bull/qme-ng/qme-ng_1.1.1-0ubuntu1_amd64.deb)\r\n\r\nThe installation procedure is as follows:\r\n\r\n1. Download the Ubuntu package corresponding to your architecture<br/>\r\n2. Install the required libraries:<br/>\r\n `sudo apt-get install libgmpxx4ldbl libboost-program-options1.46.1`\r\n3. Install the package<br/>\r\n `sudo dpkg -i package.deb`\r\n\r\n### Compilation from the sources\r\nThis installation mode guarantees the best performances, as you will obtained tailored binaries for your computer architecture.\r\n\r\n1. Get the sources, by clicking on one of the icons on the top of this page or by executing git<br/>\r\n `git clone https://github.com/mp-bull/qme-ng.git`\r\n2. Install the building dependencies<br/>\r\n `sudo apt-get install libgmp-dev libboost-program-options-dev build-essential`\r\n3. Go into the source directory and compile the project<br/>\r\n `make`\r\n\r\nYou now have a qme-ng executable ready to be used !\r\n\r\n## <a name=\"documentation\"/>Documentation\r\nThe main documentation of qme-ng is on the [Wiki](https://github.com/mp-bull/qme-ng/wiki).\r\n\r\n## <a name=\"dependencies\"/>Dependencies/Requirements\r\n* [gmplib](http://gmplib.org/) >= 5.0.0\r\n* boost::program::options >= 1.46\r\n\r\n## <a name=\"licence\"/>Licence\r\nMainly BSD 2-Clause License. Incorporates [nauty](http://cs.anu.edu.au/~bdm/nauty/) which has its own licence.\r\n\r\n## <a name=\"contact\"/>Contact & Support\r\nMatthieu Pérotin matthieu.perotin(a)bull.net\r\n\r\n","tagline":"Welcome to qme-ng !","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}